module Main where

factorial :: Integer -> Integer
factorial n
    | n < 0     = error "Factorial of negative number is undefined"
    | n == 0    = 1
    | otherwise = n * factorial (n - 1)
fibonacci :: Int -> Integer
fibonacci n | n < 0 = error "Fibonacci of negative index"
fibonacci 0 = 0; fibonacci 1 = 1; fibonacci n = fibonacci (n-1) + fibonacci (n-2)
main :: IO ()
main = do
    putStrLn "Hello from Haskell!"
    putStrLn $ "Factorial of 5: " ++ show (factorial 5)
    putStrLn $ "Fibonacci of 10: " ++ show (fibonacci 10)
