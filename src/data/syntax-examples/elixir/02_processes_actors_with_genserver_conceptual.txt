defmodule Counter do
  use GenServer
  def start_link(initial_value \\ 0) do GenServer.start_link(__MODULE__, initial_value, name: __MODULE__) end
  def increment, do: GenServer.cast(__MODULE__, :increment)
  def get_value, do: GenServer.call(__MODULE__, :get_value)
  @impl true def init(initial_value), do: {:ok, initial_value}
  @impl true def handle_cast(:increment, state), do: {:noreply, state + 1}
  @impl true def handle_call(:get_value, _from, state), do: {:reply, state, state}
end
# {:ok, _pid} = Counter.start_link(10)
# Counter.increment()
# IO.puts "Counter value: #{Counter.get_value()}"
IO.puts "GenServer Counter module defined."
